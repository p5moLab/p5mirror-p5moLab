[
  {
    "name": "2024-04-13 green",
    "_id": "1_hwEYk7p",
    "updatedAt": "2024-04-13T14:55:15.558Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "661a9ca39f3dd430fc91b5aa",
          "661a9ca39f3dd430fc91b5a9",
          "661a9ca39f3dd430fc91b5ab"
        ],
        "fileType": "folder",
        "_id": "661a9ca39f3dd430fc91b5ac",
        "createdAt": "2024-04-13T14:55:15.558Z",
        "updatedAt": "2024-04-13T14:55:15.558Z",
        "id": "661a9ca39f3dd430fc91b5ac"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/p5moLab/sketches/1_hwEYk7p\n// 2024-04-13 green\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "661a9ca39f3dd430fc91b5a9",
        "isSelectedFile": true,
        "createdAt": "2024-04-13T14:55:15.558Z",
        "updatedAt": "2024-04-13T14:55:15.558Z",
        "id": "661a9ca39f3dd430fc91b5a9"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.2/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "661a9ca39f3dd430fc91b5aa",
        "createdAt": "2024-04-13T14:55:15.558Z",
        "updatedAt": "2024-04-13T14:55:15.558Z",
        "id": "661a9ca39f3dd430fc91b5aa"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661a9ca39f3dd430fc91b5ab",
        "createdAt": "2024-04-13T14:55:15.558Z",
        "updatedAt": "2024-04-13T14:55:15.558Z",
        "id": "661a9ca39f3dd430fc91b5ab"
      }
    ],
    "createdAt": "2024-04-13T14:54:27.788Z",
    "id": "1_hwEYk7p"
  },
  {
    "name": "2024-04-13 red",
    "_id": "6S3jzU3bm",
    "updatedAt": "2024-04-13T14:54:47.198Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "661a9876181acd2f824725f3",
          "661a9876181acd2f824725f5",
          "661a99944af25f001d67ee32"
        ],
        "fileType": "folder",
        "_id": "661a9876181acd2f824725f6",
        "createdAt": "2024-04-13T14:54:47.198Z",
        "updatedAt": "2024-04-13T14:54:47.198Z",
        "id": "661a9876181acd2f824725f6"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/p5moLab/sketches/6S3jzU3bm\n// 2024-04-13 red\n\nfunction setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background(220);\n}",
        "children": [],
        "fileType": "file",
        "_id": "661a9876181acd2f824725f3",
        "isSelectedFile": true,
        "createdAt": "2024-04-13T14:54:47.198Z",
        "updatedAt": "2024-04-13T14:54:47.198Z",
        "id": "661a9876181acd2f824725f3"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661a9876181acd2f824725f5",
        "createdAt": "2024-04-13T14:54:47.198Z",
        "updatedAt": "2024-04-13T14:54:47.198Z",
        "id": "661a9876181acd2f824725f5"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "661a99944af25f001d67ee32",
        "updatedAt": "2024-04-13T14:54:47.198Z",
        "createdAt": "2024-04-13T14:54:47.198Z",
        "id": "661a99944af25f001d67ee32"
      }
    ],
    "createdAt": "2024-04-13T14:36:38.190Z",
    "id": "6S3jzU3bm"
  },
  {
    "name": "MazeSpin",
    "_id": "S9irL-RJA",
    "updatedAt": "2024-04-13T15:25:59.849Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "661aa4079d1627335eeb3c80",
          "661aa4079d1627335eeb3c81",
          "661aa4079d1627335eeb3c82",
          "661aa4079d1627335eeb3c83",
          "661aa4079d1627335eeb3c84"
        ],
        "fileType": "folder",
        "_id": "661aa4079d1627335eeb3c7f",
        "createdAt": "2024-04-13T15:25:59.848Z",
        "updatedAt": "2024-04-13T15:25:59.848Z",
        "id": "661aa4079d1627335eeb3c7f"
      },
      {
        "name": "MazeSpin.js",
        "content": "// maze with rotating transition\n\n// https://editor.p5js.org/jht9629-gmail/sketches/-FuOH_EE4\n\n// import SpiralWalker from './sub/SpiralWalker.js?v={{vers}}';\n// import SecondsTimer from './sub/SecondsTimer.js?v={{vers}}';\n// import { report_1ofn, div_report } from './sub/report.js?v={{vers}}';\n// import { array_zero, array_add, array_random } from './sub/array.js?v={{vers}}';\n\nclass MazeSpin {\n  // this.ncells\n  // this.width = this.width\n  // this.height = this.height\n  // this.strokeWeight = 0.5;\n  // this.delta = 1;\n  // this.step_period = 1.0;\n  // this.pause_period = 1.0; // 0.5;\n  // this.do_cycle = 0;\n  // this.do_spiral\n  // this.alpha\n  constructor(props) {\n    // console.log('MazeSpin props', props);\n    Object.assign(this, props);\n\n    this.now = [];\n    this.next = [];\n    this.random = [];\n\n    this.report_lines = [];\n    this.div;\n\n    this.d = int(this.width / this.ncells);\n\n    this.output = createGraphics(this.width, this.height);\n    if (this.video_color) {\n      this.input_copy = createImage(this.width, this.height);\n    }\n    this.output.noFill();\n    this.output.strokeWeight(this.d * this.strokeWeight);\n\n    let n = this.do_spiral ? this.make_spiral_pts() : this.make_grid_pts();\n    array_zero(this.now, n);\n    array_zero(this.next, n);\n    array_zero(this.random, n);\n    array_add(this.next, this.delta);\n    this.target = this.next;\n\n    this.timer = new SecondsTimer();\n    this.timer.setPeriod(this.step_period);\n\n    this.clear_timer = new SecondsTimer();\n    this.clear_timer.setPeriod(this.clear_period);\n\n    if (this.do_cycle == 0) {\n      this.draw_step = 'draw_maze0_step';\n    } else if (this.do_cycle == 1) {\n      array_random(this.next);\n      this.draw_step = 'draw_maze1_step';\n    } else {\n      this.draw_step = 'draw_maze2_step0';\n    }\n\n    report_1ofn(this);\n    div_report(this, this.target, 'setup');\n  }\n\n  prepareOutput() {\n    // console.log('MazeSpin prepareOutput');\n    if (this.video_color) {\n      // copy(srcImage, sx, sy, sw, sh, dx, dy, dw, dh)\n      this.input_copy.copy(this.input, 0, 0, this.width, this.height, 0, 0, this.width, this.height);\n    }\n    this[this.draw_step]();\n  }\n\n  draw_maze_progress() {\n    this.draw_maze_at(this.timer.progress());\n  }\n\n  draw_maze_still() {\n    this.draw_maze_at(1.0);\n  }\n\n  draw_maze_at(at) {\n    // this.output.background(220);\n    // if (this.clear_timer.arrived()) {\n    this.output.clear();\n    // }\n    let tangle = HALF_PI * at;\n    let half = this.d / 2;\n    let drawLeft = this.do_truchet ? 'truchet_drawLeft' : 'line_drawLeft';\n    let drawRight = this.do_truchet ? 'truchet_drawRight' : 'line_drawRight';\n    for (let index = 0; index < this.pts.length; index++) {\n      let [x, y] = this.pts[index];\n      let now = this.now[index];\n      let target = this.target[index];\n      let angle = now == target ? 0 : tangle;\n      if (this.video_color) {\n        let col = this.input_copy.get(x, y);\n        col[3] = this.alpha;\n        this.output.stroke(col);\n      }\n      if (now) {\n        this[drawLeft](x, y, this.d, half, angle);\n      } else {\n        this[drawRight](x, y, this.d, half, angle);\n      }\n    }\n  }\n\n  // sequential\n  draw_maze0_step() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze0_pause';\n    }\n  }\n\n  draw_maze0_pause() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      array_add(this.now, this.delta);\n      array_add(this.next, this.delta);\n      div_report(this, this.target, 'draw_maze0_step');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze0_step';\n    }\n  }\n\n  // random to random\n  draw_maze1_step() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze1_pause';\n    }\n  }\n\n  draw_maze1_pause() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      let oldNow = this.now;\n      this.now = this.next;\n      this.next = oldNow;\n      this.target = this.next;\n      array_random(this.target);\n      div_report(this, this.target, 'draw_maze1_step');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze1_step';\n    }\n  }\n\n  // --\n  // sequencail - random - sequential\n  draw_maze2_step0() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze2_pause0';\n    }\n  }\n\n  draw_maze2_pause0() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      array_add(this.now, this.delta);\n      array_add(this.next, this.delta);\n      array_random(this.random);\n      this.target = this.random;\n      div_report(this, this.target, 'draw_maze2_step1');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze2_step1';\n    }\n  }\n\n  draw_maze2_step1() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze2_pause2';\n    }\n  }\n\n  draw_maze2_pause2() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      let now_save = this.now;\n      this.now = this.target;\n      this.target = now_save;\n      div_report(this, this.target, 'draw_maze2_step2');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze2_step2';\n    }\n  }\n\n  draw_maze2_step2() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze2_pause3';\n    }\n  }\n\n  draw_maze2_pause3() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      this.now = this.target;\n      this.target = this.next;\n      div_report(this, this.target, 'draw_maze2_step0');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze2_step0';\n    }\n  }\n\n  // --\n  line_drawLeft(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.line(-half + 0, -half + 0, -half + len, -half + len);\n    this.output.pop();\n  }\n\n  line_drawRight(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.line(-half + len, -half + 0, -half + 0, -half + len);\n    this.output.pop();\n  }\n\n  // --\n  truchet_drawLeft(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.arc(-half + 0, -half + 0, len, len, 0, d90);\n    this.output.arc(-half + len, -half + len, len, len, d180, d270);\n    this.output.pop();\n  }\n\n  truchet_drawRight(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.arc(-half + len, -half + 0, len, len, d90, d180);\n    this.output.arc(-half + 0, -half + len, len, len, d270, d360);\n    this.output.pop();\n  }\n\n  // --\n  make_spiral_pts() {\n    this.pts = new SpiralWalker(this).points();\n    return this.pts.length;\n  }\n\n  make_grid_pts() {\n    let pts = [];\n    for (let y = 0; y < this.height; y += this.d) {\n      for (let x = 0; x < this.width; x += this.d) {\n        pts.push([x, y]);\n      }\n    }\n    let n = pts.length;\n    let nw = int(this.width / this.d);\n    let nh = int(this.height / this.d);\n    let half = int(n / 2);\n    // console.log('make_grid_pts n', n, 'half', half);\n    // console.log('make_grid_pts nw', nw, 'nh', nh);\n\n    // let offset = int(nw / 2) + int(nh / 2) * nw;\n    // let npts = [];\n    // for (let index = 0; index < n; index++) {\n    //   npts.push(pts[(index + offset) % n]);\n    // }\n    // this.pts = npts;\n\n    this.pts = pts;\n    return n;\n  }\n}\n\nconst _PI = Math.PI;\nconst _HALF_PI = _PI / 2;\n\nlet d90 = _HALF_PI;\nlet d180 = _HALF_PI * 2;\nlet d270 = _HALF_PI * 3;\nlet d360 = _HALF_PI * 4;\n\n// https://editor.p5js.org/jht9629-nyu/sketches/fWSv5uzke\n// truchet tiles pause copy\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c80",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c80"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n      \n<!--     <script type=\"module\" src=\"MazeSpin.js\"></script> -->\n\n    <script src=\"sub/SecondsTimer.js\"></script>\n    <script src=\"sub/SpiralWalker.js\"></script>\n    <script src=\"sub/array.js\"></script>\n    <script src=\"sub/report.js\"></script>\n    <script src=\"MazeSpin.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c81",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c81"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/jht9629-gmail/sketches/4pgECdEVG\n// MazeSpin liberation screens\n\nlet my = {};\n\nlet mazeSpin;\n\nfunction setup() {\n  my.width = 300;\n  my.height = 300;\n  my.ncells = 9;\n  my.strokeWeight = 0.5;\n  my.delta = 1;\n  my.step_period = 2;\n  my.pause_period = 2;\n  my.do_spiral = 1;\n  my.do_cycle = 2;\n  my.do_report = 0;\n  my.alpha = 255;\n  my.do_truchet = 1;\n  \n  my.width = 400;\n  my.height = 400;\n  my.colorIndex = 0;\n  my.colorChangeSecs = 10;\n  my.startTime = millis() / 1000.0;\n\n  createCanvas(my.width, my.height);\n\n  // console.log(\"MazeSpin\", MazeSpin);\n  mazeSpin = new MazeSpin(my);\n\n  fullScreenBtn = createButton('Full Screen').mousePressed(full_screen_action);\n  fullScreenBtn.style('font-size:42px');\n}\n\nfunction draw() {\n  background(colorPalette[my.colorIndex]);\n  mazeSpin.prepareOutput();\n  image(mazeSpin.output, 0, 0);\n  check_time();\n}\n\nfunction my_setup() {\n  my.width = width;\n  my.height = height;\n  mazeSpin = new MazeSpin(my);\n}\n\nfunction check_time() {\n  let now = millis() / 1000;\n  if (now - my.startTime > my.colorChangeSecs) {\n    my.startTime = now;\n    next_color();\n  }\n}\n\nfunction next_color() {\n  my.colorIndex = (my.colorIndex + 1) % colorPalette.length;\n}\n\nlet colorGold = [187, 165, 61];\n// let colorPalette = [\"red\", \"green\", colorGold, \"black\"];\nlet colorPalette = ['red', 'green', colorGold];\n\nfunction full_screen_action() {\n  fullScreenBtn.remove();\n  fullscreen(1);\n  let delay = 3000;\n  setTimeout(ui_present_window, delay);\n}\n\nfunction ui_present_window() {\n  resizeCanvas(windowWidth, windowHeight);\n  my_setup();\n}\n\n// --\n// https://editor.p5js.org/jht9629-nyu/sketches/2pxhnehBV\n// ims04-jht scroll color rate\n\n// https://editor.p5js.org/jht9629-nyu/sketches/2pxhnehBV\n// ims04-jht scroll color rate\n\n// https://editor.p5js.org/jht9629-gmail/sketches/-FuOH_EE4\n// MazeSpin\n// converted from p5VideoKit effects import style\n//   to <script src=\"\"> format used in p5VideoKit\n//\n\n// https://github.com/jht1493/p5VideoKit/blob/main/src/effects/maze_spin/MazeSpin.js\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c82",
        "isSelectedFile": true,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c82"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c83",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c83"
      },
      {
        "name": "sub",
        "content": "",
        "children": [
          "661aa4079d1627335eeb3c85",
          "661aa4079d1627335eeb3c86",
          "661aa4079d1627335eeb3c87",
          "661aa4079d1627335eeb3c88"
        ],
        "fileType": "folder",
        "_id": "661aa4079d1627335eeb3c84",
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c84"
      },
      {
        "name": "SecondsTimer.js",
        "content": "class SecondsTimer {\n  // let timer = SecondsTimer(period)\n  //    period\n  //      = seconds between trigger\n  //      = -1 to never trigger\n  //\n  constructor(period) {\n    this.setPeriod(period);\n  }\n\n  // setPeriod(newPeriod)\n  // establish a new timer period\n  setPeriod(newPeriod) {\n    this.period = newPeriod;\n    this.start();\n  }\n\n  // establish start time\n  start() {\n    this.startSecs = secsTime();\n  }\n\n  // return seconds since start time established\n  lapse() {\n    let nowSecs = secsTime();\n    return nowSecs - this.startSecs;\n  }\n\n  // return truthy 1 if period seconds has passed\n  //    and restart timer if so.\n  arrived() {\n    let nowSecs = secsTime();\n    let lapse = nowSecs - this.startSecs;\n    if (this.period >= 0 && lapse > this.period) {\n      this.startSecs = nowSecs;\n      return 1;\n    }\n    return 0;\n  }\n\n  // return 0 to 1.0 as fraction of time to complete period\n  progress() {\n    return this.lapse() / this.period;\n  }\n}\n\n// return relative time in seconds\nfunction secsTime() {\n  return millis() / 1000;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c85",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c85"
      },
      {
        "name": "SpiralWalker.js",
        "content": "// create points for a spiral from the center\n\nclass SpiralWalker {\n  //\n  // { width: 600, height: 400, d: 10 }\n  constructor(props) {\n    Object.assign(this, props);\n  }\n  points() {\n    // start with single pixel box in the center\n    // Left Top Right Bottom\n    this.L = this.width / 2;\n    this.T = this.height / 2;\n    this.R = this.L;\n    this.B = this.T;\n\n    let nw = this.width / this.d;\n    let nh = this.height / this.d;\n    let n = nw * nh;\n    // console.log('SpiralWalker nw', nw, 'mh', nh, 'n', n);\n\n    this.offset = nw & 1 ? -this.d / 2 : 0;\n    this.px = this.L;\n    this.py = this.T;\n\n    this.grow_box();\n\n    this.pts = [];\n    let d = this.d;\n\n    let more = 1;\n    while (more) {\n      // move up out of box\n      this.nx = this.px;\n      this.ny = this.py - d;\n      this.my_line({ dx: 0, dy: 0 });\n\n      // move right\n      this.nx = this.px + d;\n      while (this.nx < this.R) {\n        this.my_line({ dx: d, dy: 0 });\n      }\n      this.nx -= d;\n\n      // move down\n      this.ny += d;\n      while (this.ny < this.B) {\n        this.my_line({ dx: 0, dy: d });\n      }\n      this.ny -= d;\n\n      // move left\n      this.nx = this.px - d;\n      while (this.nx > this.L) {\n        this.my_line({ dx: -d, dy: 0 });\n      }\n      this.nx += d;\n\n      // move up\n      this.ny -= d;\n      while (this.ny > this.T) {\n        this.my_line({ dx: 0, dy: -d });\n      }\n      this.ny += d;\n\n      this.grow_box();\n\n      let morex = this.px >= 0 && this.px < this.width;\n      let morey = this.py >= 0 && this.py < this.height;\n      more = morex || morey;\n      // more = morex && morey;\n    }\n    // console.log(this.pts)\n\n    // first element repeated for length > 1\n    if (this.pts.length > 1) this.pts.splice(0, 1);\n\n    // console.log('SpiralWalker this.pts.length', this.pts.length);\n\n    return this.pts;\n  }\n\n  my_line({ dx, dy }) {\n    let x = this.nx;\n    let y = this.ny;\n    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {\n      x += this.offset;\n      y += this.offset;\n      this.pts.push([x, y]);\n    }\n    // line(this.nx, this.ny, this.px, this.py);\n    this.px = this.nx;\n    this.py = this.ny;\n    this.nx += dx;\n    this.ny += dy;\n  }\n\n  grow_box() {\n    this.L -= this.d;\n    this.R += this.d;\n    this.T -= this.d;\n    this.B += this.d;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c86",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c86"
      },
      {
        "name": "array.js",
        "content": "// operations on an array of bits\n\nfunction array_zero(arr, n) {\n  // Fill array a_arr with random true/false values\n  for (let index = 0; index < n; index++) {\n    arr[index] = 0;\n  }\n}\n\nfunction array_add(arr, d) {\n  if (d == 1) {\n    array_incr(arr);\n  } else if (d == -1) {\n    array_decr(arr);\n  } else {\n    console.log('array_add bad d', d);\n  }\n}\n\nfunction array_decr(arr) {\n  let carry = 0;\n  for (let index = 0; index < arr.length; index++) {\n    let sum = arr[index] + 1 + carry;\n    // sum = 1, 2, 3\n    arr[index] = sum & 1;\n    carry = sum >> 1;\n    // carry = 0 or 1\n  }\n}\n\nfunction array_incr(arr) {\n  for (let index = 0; index < arr.length; index++) {\n    let sum = arr[index] + 1;\n    // sum is 1 or 2\n    if (sum == 1) {\n      arr[index] = 1;\n      break;\n    }\n    // zero and continue to carry the 2\n    arr[index] = 0;\n  }\n}\n\nfunction array_random(arr) {\n  for (let index = 0; index < arr.length; index++) {\n    let bit = random([0, 1]);\n    arr[index] = bit;\n  }\n}\n\nfunction array_copy_to_from(to, from) {\n  for (let index = 0; index < to.length; index++) {\n    to[index] = from[index];\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c87",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c87"
      },
      {
        "name": "report.js",
        "content": "// report array of bits as BigInt in div\n\nfunction report_1ofn(my) {\n  if (!my.do_report) return;\n  let bnum = 2n ** BigInt(my.now.length);\n  let bstr = ' 0x' + bnum.toString(16).toUpperCase();\n  let str = '1 of ' + bnum.toLocaleString('en-US') + bstr + '<br/> ' + parseFloat(bnum) + '<br/> ';\n  let div = createP('<code style=\"font-size:16px\">' + str + '</code>');\n  // div.style('margin-left:2px');\n}\n\nfunction div_report(my, arr, msg) {\n  // console.log('div_report', msg);\n  if (!my.do_report) return;\n  if (!my.div) {\n    my.div = createP();\n  }\n  let narr = arr.concat();\n  narr.reverse();\n  let str = narr.join('');\n  let bnum = BigInt('0b' + str);\n  // str = bnum.toLocaleString('en-US') + ' ' + msg + '<br/> ';\n  let bstr;\n  if (bnum >= 256n) {\n    bstr = ' 0x' + bnum.toString(16).toUpperCase();\n  } else {\n    bstr = ' 0b' + bnum.toString(2);\n  }\n  // &nbsp;\n  str = '' + bnum.toLocaleString('en-US') + bstr + '<br/> ';\n  my.report_lines.unshift(str);\n  while (my.report_lines.length > my.do_report) {\n    my.report_lines.pop();\n  }\n  my.div.elt.innerHTML = '<code style=\"font-size:16px\">' + my.report_lines.join('') + '</code>';\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa4079d1627335eeb3c88",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:25:59.849Z",
        "updatedAt": "2024-04-13T15:25:59.849Z",
        "id": "661aa4079d1627335eeb3c88"
      }
    ],
    "createdAt": "2024-04-13T15:25:59.849Z",
    "id": "S9irL-RJA"
  },
  {
    "name": "MazeSpin liberation screens copy copy",
    "_id": "EhZJTt9ym",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "661aa1444b946f9f65fa0645",
          "661aa1444b946f9f65fa0646",
          "661aa1444b946f9f65fa0647",
          "661aa1444b946f9f65fa0648",
          "661aa1444b946f9f65fa0649"
        ],
        "fileType": "folder",
        "_id": "661aa1444b946f9f65fa0644",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:14:19.487Z",
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa0644"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/jht9629-gmail/sketches/4pgECdEVG\n// MazeSpin liberation screens\n\nlet my = {};\n\nlet mazeSpin;\n\nfunction setup() {\n  my.width = 300;\n  my.height = 300;\n  my.ncells = 9;\n  my.strokeWeight = 0.5;\n  my.delta = 1;\n  my.step_period = 2;\n  my.pause_period = 2;\n  my.do_spiral = 1;\n  my.do_cycle = 2;\n  my.do_report = 0;\n  my.alpha = 255;\n  my.do_truchet = 1;\n  \n  my.width = 400;\n  my.height = 400;\n  my.colorIndex = 0;\n  my.colorChangeSecs = 10;\n  my.startTime = millis() / 1000.0;\n\n  createCanvas(my.width, my.height);\n\n  // console.log(\"MazeSpin\", MazeSpin);\n  mazeSpin = new MazeSpin(my);\n\n  fullScreenBtn = createButton('Full Screen').mousePressed(full_screen_action);\n  fullScreenBtn.style('font-size:42px');\n}\n\nfunction draw() {\n  background(colorPalette[my.colorIndex]);\n  mazeSpin.prepareOutput();\n  image(mazeSpin.output, 0, 0);\n  check_time();\n}\n\nfunction my_setup() {\n  my.width = width;\n  my.height = height;\n  mazeSpin = new MazeSpin(my);\n}\n\nfunction check_time() {\n  let now = millis() / 1000;\n  if (now - my.startTime > my.colorChangeSecs) {\n    my.startTime = now;\n    next_color();\n  }\n}\n\nfunction next_color() {\n  my.colorIndex = (my.colorIndex + 1) % colorPalette.length;\n}\n\nlet colorGold = [187, 165, 61];\n// let colorPalette = [\"red\", \"green\", colorGold, \"black\"];\nlet colorPalette = ['red', 'green', colorGold];\n\nfunction full_screen_action() {\n  fullScreenBtn.remove();\n  fullscreen(1);\n  let delay = 3000;\n  setTimeout(ui_present_window, delay);\n}\n\nfunction ui_present_window() {\n  resizeCanvas(windowWidth, windowHeight);\n  my_setup();\n}\n\n// --\n// https://editor.p5js.org/jht9629-nyu/sketches/2pxhnehBV\n// ims04-jht scroll color rate\n\n// https://editor.p5js.org/jht9629-nyu/sketches/2pxhnehBV\n// ims04-jht scroll color rate\n\n// https://editor.p5js.org/jht9629-gmail/sketches/-FuOH_EE4\n// MazeSpin\n// converted from p5VideoKit effects import style\n//   to <script src=\"\"> format used in p5VideoKit\n//\n\n// https://github.com/jht1493/p5VideoKit/blob/main/src/effects/maze_spin/MazeSpin.js\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa0647",
        "isSelectedFile": true,
        "createdAt": "2024-04-13T15:14:19.487Z",
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa0647"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.6.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n      \n<!--     <script type=\"module\" src=\"MazeSpin.js\"></script> -->\n\n    <script src=\"sub/SecondsTimer.js\"></script>\n    <script src=\"sub/SpiralWalker.js\"></script>\n    <script src=\"sub/array.js\"></script>\n    <script src=\"sub/report.js\"></script>\n    <script src=\"MazeSpin.js\"></script>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa0646",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:14:19.487Z",
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa0646"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa0648",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:14:19.487Z",
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa0648"
      },
      {
        "name": "MazeSpin.js",
        "content": "// maze with rotating transition\n\n// https://editor.p5js.org/jht9629-gmail/sketches/-FuOH_EE4\n\n// import SpiralWalker from './sub/SpiralWalker.js?v={{vers}}';\n// import SecondsTimer from './sub/SecondsTimer.js?v={{vers}}';\n// import { report_1ofn, div_report } from './sub/report.js?v={{vers}}';\n// import { array_zero, array_add, array_random } from './sub/array.js?v={{vers}}';\n\nclass MazeSpin {\n  // this.ncells\n  // this.width = this.width\n  // this.height = this.height\n  // this.strokeWeight = 0.5;\n  // this.delta = 1;\n  // this.step_period = 1.0;\n  // this.pause_period = 1.0; // 0.5;\n  // this.do_cycle = 0;\n  // this.do_spiral\n  // this.alpha\n  constructor(props) {\n    // console.log('MazeSpin props', props);\n    Object.assign(this, props);\n\n    this.now = [];\n    this.next = [];\n    this.random = [];\n\n    this.report_lines = [];\n    this.div;\n\n    this.d = int(this.width / this.ncells);\n\n    this.output = createGraphics(this.width, this.height);\n    if (this.video_color) {\n      this.input_copy = createImage(this.width, this.height);\n    }\n    this.output.noFill();\n    this.output.strokeWeight(this.d * this.strokeWeight);\n\n    let n = this.do_spiral ? this.make_spiral_pts() : this.make_grid_pts();\n    array_zero(this.now, n);\n    array_zero(this.next, n);\n    array_zero(this.random, n);\n    array_add(this.next, this.delta);\n    this.target = this.next;\n\n    this.timer = new SecondsTimer();\n    this.timer.setPeriod(this.step_period);\n\n    this.clear_timer = new SecondsTimer();\n    this.clear_timer.setPeriod(this.clear_period);\n\n    if (this.do_cycle == 0) {\n      this.draw_step = 'draw_maze0_step';\n    } else if (this.do_cycle == 1) {\n      array_random(this.next);\n      this.draw_step = 'draw_maze1_step';\n    } else {\n      this.draw_step = 'draw_maze2_step0';\n    }\n\n    report_1ofn(this);\n    div_report(this, this.target, 'setup');\n  }\n\n  prepareOutput() {\n    // console.log('MazeSpin prepareOutput');\n    if (this.video_color) {\n      // copy(srcImage, sx, sy, sw, sh, dx, dy, dw, dh)\n      this.input_copy.copy(this.input, 0, 0, this.width, this.height, 0, 0, this.width, this.height);\n    }\n    this[this.draw_step]();\n  }\n\n  draw_maze_progress() {\n    this.draw_maze_at(this.timer.progress());\n  }\n\n  draw_maze_still() {\n    this.draw_maze_at(1.0);\n  }\n\n  draw_maze_at(at) {\n    // this.output.background(220);\n    // if (this.clear_timer.arrived()) {\n    this.output.clear();\n    // }\n    let tangle = HALF_PI * at;\n    let half = this.d / 2;\n    let drawLeft = this.do_truchet ? 'truchet_drawLeft' : 'line_drawLeft';\n    let drawRight = this.do_truchet ? 'truchet_drawRight' : 'line_drawRight';\n    for (let index = 0; index < this.pts.length; index++) {\n      let [x, y] = this.pts[index];\n      let now = this.now[index];\n      let target = this.target[index];\n      let angle = now == target ? 0 : tangle;\n      if (this.video_color) {\n        let col = this.input_copy.get(x, y);\n        col[3] = this.alpha;\n        this.output.stroke(col);\n      }\n      if (now) {\n        this[drawLeft](x, y, this.d, half, angle);\n      } else {\n        this[drawRight](x, y, this.d, half, angle);\n      }\n    }\n  }\n\n  // sequential\n  draw_maze0_step() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze0_pause';\n    }\n  }\n\n  draw_maze0_pause() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      array_add(this.now, this.delta);\n      array_add(this.next, this.delta);\n      div_report(this, this.target, 'draw_maze0_step');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze0_step';\n    }\n  }\n\n  // random to random\n  draw_maze1_step() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze1_pause';\n    }\n  }\n\n  draw_maze1_pause() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      let oldNow = this.now;\n      this.now = this.next;\n      this.next = oldNow;\n      this.target = this.next;\n      array_random(this.target);\n      div_report(this, this.target, 'draw_maze1_step');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze1_step';\n    }\n  }\n\n  // --\n  // sequencail - random - sequential\n  draw_maze2_step0() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze2_pause0';\n    }\n  }\n\n  draw_maze2_pause0() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      array_add(this.now, this.delta);\n      array_add(this.next, this.delta);\n      array_random(this.random);\n      this.target = this.random;\n      div_report(this, this.target, 'draw_maze2_step1');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze2_step1';\n    }\n  }\n\n  draw_maze2_step1() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze2_pause2';\n    }\n  }\n\n  draw_maze2_pause2() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      let now_save = this.now;\n      this.now = this.target;\n      this.target = now_save;\n      div_report(this, this.target, 'draw_maze2_step2');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze2_step2';\n    }\n  }\n\n  draw_maze2_step2() {\n    this.draw_maze_progress();\n    if (this.timer.arrived()) {\n      this.timer.setPeriod(this.pause_period);\n      this.draw_step = 'draw_maze2_pause3';\n    }\n  }\n\n  draw_maze2_pause3() {\n    this.draw_maze_still();\n    if (this.timer.arrived()) {\n      this.now = this.target;\n      this.target = this.next;\n      div_report(this, this.target, 'draw_maze2_step0');\n      this.timer.setPeriod(this.step_period);\n      this.draw_step = 'draw_maze2_step0';\n    }\n  }\n\n  // --\n  line_drawLeft(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.line(-half + 0, -half + 0, -half + len, -half + len);\n    this.output.pop();\n  }\n\n  line_drawRight(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.line(-half + len, -half + 0, -half + 0, -half + len);\n    this.output.pop();\n  }\n\n  // --\n  truchet_drawLeft(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.arc(-half + 0, -half + 0, len, len, 0, d90);\n    this.output.arc(-half + len, -half + len, len, len, d180, d270);\n    this.output.pop();\n  }\n\n  truchet_drawRight(x, y, len, half, angle) {\n    this.output.push();\n    this.output.translate(x + half, y + half);\n    this.output.rotate(angle);\n    this.output.arc(-half + len, -half + 0, len, len, d90, d180);\n    this.output.arc(-half + 0, -half + len, len, len, d270, d360);\n    this.output.pop();\n  }\n\n  // --\n  make_spiral_pts() {\n    this.pts = new SpiralWalker(this).points();\n    return this.pts.length;\n  }\n\n  make_grid_pts() {\n    let pts = [];\n    for (let y = 0; y < this.height; y += this.d) {\n      for (let x = 0; x < this.width; x += this.d) {\n        pts.push([x, y]);\n      }\n    }\n    let n = pts.length;\n    let nw = int(this.width / this.d);\n    let nh = int(this.height / this.d);\n    let half = int(n / 2);\n    // console.log('make_grid_pts n', n, 'half', half);\n    // console.log('make_grid_pts nw', nw, 'nh', nh);\n\n    // let offset = int(nw / 2) + int(nh / 2) * nw;\n    // let npts = [];\n    // for (let index = 0; index < n; index++) {\n    //   npts.push(pts[(index + offset) % n]);\n    // }\n    // this.pts = npts;\n\n    this.pts = pts;\n    return n;\n  }\n}\n\nconst _PI = Math.PI;\nconst _HALF_PI = _PI / 2;\n\nlet d90 = _HALF_PI;\nlet d180 = _HALF_PI * 2;\nlet d270 = _HALF_PI * 3;\nlet d360 = _HALF_PI * 4;\n\n// https://editor.p5js.org/jht9629-nyu/sketches/fWSv5uzke\n// truchet tiles pause copy\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa0645",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T15:14:19.487Z",
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa0645"
      },
      {
        "name": "sub",
        "content": "",
        "children": [
          "661aa1444b946f9f65fa064a",
          "661aa1444b946f9f65fa064b",
          "661aa1444b946f9f65fa064c",
          "661aa1444b946f9f65fa064d"
        ],
        "fileType": "folder",
        "_id": "661aa1444b946f9f65fa0649",
        "isSelectedFile": false,
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "createdAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa0649"
      },
      {
        "name": "array.js",
        "content": "// operations on an array of bits\n\nfunction array_zero(arr, n) {\n  // Fill array a_arr with random true/false values\n  for (let index = 0; index < n; index++) {\n    arr[index] = 0;\n  }\n}\n\nfunction array_add(arr, d) {\n  if (d == 1) {\n    array_incr(arr);\n  } else if (d == -1) {\n    array_decr(arr);\n  } else {\n    console.log('array_add bad d', d);\n  }\n}\n\nfunction array_decr(arr) {\n  let carry = 0;\n  for (let index = 0; index < arr.length; index++) {\n    let sum = arr[index] + 1 + carry;\n    // sum = 1, 2, 3\n    arr[index] = sum & 1;\n    carry = sum >> 1;\n    // carry = 0 or 1\n  }\n}\n\nfunction array_incr(arr) {\n  for (let index = 0; index < arr.length; index++) {\n    let sum = arr[index] + 1;\n    // sum is 1 or 2\n    if (sum == 1) {\n      arr[index] = 1;\n      break;\n    }\n    // zero and continue to carry the 2\n    arr[index] = 0;\n  }\n}\n\nfunction array_random(arr) {\n  for (let index = 0; index < arr.length; index++) {\n    let bit = random([0, 1]);\n    arr[index] = bit;\n  }\n}\n\nfunction array_copy_to_from(to, from) {\n  for (let index = 0; index < to.length; index++) {\n    to[index] = from[index];\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa064c",
        "isSelectedFile": false,
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "createdAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa064c"
      },
      {
        "name": "report.js",
        "content": "// report array of bits as BigInt in div\n\nfunction report_1ofn(my) {\n  if (!my.do_report) return;\n  let bnum = 2n ** BigInt(my.now.length);\n  let bstr = ' 0x' + bnum.toString(16).toUpperCase();\n  let str = '1 of ' + bnum.toLocaleString('en-US') + bstr + '<br/> ' + parseFloat(bnum) + '<br/> ';\n  let div = createP('<code style=\"font-size:16px\">' + str + '</code>');\n  // div.style('margin-left:2px');\n}\n\nfunction div_report(my, arr, msg) {\n  // console.log('div_report', msg);\n  if (!my.do_report) return;\n  if (!my.div) {\n    my.div = createP();\n  }\n  let narr = arr.concat();\n  narr.reverse();\n  let str = narr.join('');\n  let bnum = BigInt('0b' + str);\n  // str = bnum.toLocaleString('en-US') + ' ' + msg + '<br/> ';\n  let bstr;\n  if (bnum >= 256n) {\n    bstr = ' 0x' + bnum.toString(16).toUpperCase();\n  } else {\n    bstr = ' 0b' + bnum.toString(2);\n  }\n  // &nbsp;\n  str = '' + bnum.toLocaleString('en-US') + bstr + '<br/> ';\n  my.report_lines.unshift(str);\n  while (my.report_lines.length > my.do_report) {\n    my.report_lines.pop();\n  }\n  my.div.elt.innerHTML = '<code style=\"font-size:16px\">' + my.report_lines.join('') + '</code>';\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa064d",
        "isSelectedFile": false,
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "createdAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa064d"
      },
      {
        "name": "SecondsTimer.js",
        "content": "class SecondsTimer {\n  // let timer = SecondsTimer(period)\n  //    period\n  //      = seconds between trigger\n  //      = -1 to never trigger\n  //\n  constructor(period) {\n    this.setPeriod(period);\n  }\n\n  // setPeriod(newPeriod)\n  // establish a new timer period\n  setPeriod(newPeriod) {\n    this.period = newPeriod;\n    this.start();\n  }\n\n  // establish start time\n  start() {\n    this.startSecs = secsTime();\n  }\n\n  // return seconds since start time established\n  lapse() {\n    let nowSecs = secsTime();\n    return nowSecs - this.startSecs;\n  }\n\n  // return truthy 1 if period seconds has passed\n  //    and restart timer if so.\n  arrived() {\n    let nowSecs = secsTime();\n    let lapse = nowSecs - this.startSecs;\n    if (this.period >= 0 && lapse > this.period) {\n      this.startSecs = nowSecs;\n      return 1;\n    }\n    return 0;\n  }\n\n  // return 0 to 1.0 as fraction of time to complete period\n  progress() {\n    return this.lapse() / this.period;\n  }\n}\n\n// return relative time in seconds\nfunction secsTime() {\n  return millis() / 1000;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa064a",
        "isSelectedFile": false,
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "createdAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa064a"
      },
      {
        "name": "SpiralWalker.js",
        "content": "// create points for a spiral from the center\n\nclass SpiralWalker {\n  //\n  // { width: 600, height: 400, d: 10 }\n  constructor(props) {\n    Object.assign(this, props);\n  }\n  points() {\n    // start with single pixel box in the center\n    // Left Top Right Bottom\n    this.L = this.width / 2;\n    this.T = this.height / 2;\n    this.R = this.L;\n    this.B = this.T;\n\n    let nw = this.width / this.d;\n    let nh = this.height / this.d;\n    let n = nw * nh;\n    // console.log('SpiralWalker nw', nw, 'mh', nh, 'n', n);\n\n    this.offset = nw & 1 ? -this.d / 2 : 0;\n    this.px = this.L;\n    this.py = this.T;\n\n    this.grow_box();\n\n    this.pts = [];\n    let d = this.d;\n\n    let more = 1;\n    while (more) {\n      // move up out of box\n      this.nx = this.px;\n      this.ny = this.py - d;\n      this.my_line({ dx: 0, dy: 0 });\n\n      // move right\n      this.nx = this.px + d;\n      while (this.nx < this.R) {\n        this.my_line({ dx: d, dy: 0 });\n      }\n      this.nx -= d;\n\n      // move down\n      this.ny += d;\n      while (this.ny < this.B) {\n        this.my_line({ dx: 0, dy: d });\n      }\n      this.ny -= d;\n\n      // move left\n      this.nx = this.px - d;\n      while (this.nx > this.L) {\n        this.my_line({ dx: -d, dy: 0 });\n      }\n      this.nx += d;\n\n      // move up\n      this.ny -= d;\n      while (this.ny > this.T) {\n        this.my_line({ dx: 0, dy: -d });\n      }\n      this.ny += d;\n\n      this.grow_box();\n\n      let morex = this.px >= 0 && this.px < this.width;\n      let morey = this.py >= 0 && this.py < this.height;\n      more = morex || morey;\n      // more = morex && morey;\n    }\n    // console.log(this.pts)\n\n    // first element repeated for length > 1\n    if (this.pts.length > 1) this.pts.splice(0, 1);\n\n    // console.log('SpiralWalker this.pts.length', this.pts.length);\n\n    return this.pts;\n  }\n\n  my_line({ dx, dy }) {\n    let x = this.nx;\n    let y = this.ny;\n    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {\n      x += this.offset;\n      y += this.offset;\n      this.pts.push([x, y]);\n    }\n    // line(this.nx, this.ny, this.px, this.py);\n    this.px = this.nx;\n    this.py = this.ny;\n    this.nx += dx;\n    this.ny += dy;\n  }\n\n  grow_box() {\n    this.L -= this.d;\n    this.R += this.d;\n    this.T -= this.d;\n    this.B += this.d;\n  }\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661aa1444b946f9f65fa064b",
        "isSelectedFile": false,
        "updatedAt": "2024-04-13T15:14:19.487Z",
        "createdAt": "2024-04-13T15:14:19.487Z",
        "id": "661aa1444b946f9f65fa064b"
      }
    ],
    "createdAt": "2024-04-13T15:14:12.774Z",
    "updatedAt": "2024-04-13T15:14:19.487Z",
    "id": "EhZJTt9ym"
  },
  {
    "name": "video clock",
    "_id": "XALbXQeCG",
    "updatedAt": "2024-04-13T14:30:59.364Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "661a97236bcf802f0a9d0283",
          "661a97236bcf802f0a9d0284",
          "661a97236bcf802f0a9d0285"
        ],
        "fileType": "folder",
        "_id": "661a97236bcf802f0a9d0282",
        "createdAt": "2024-04-13T14:30:59.363Z",
        "updatedAt": "2024-04-13T14:30:59.363Z",
        "id": "661a97236bcf802f0a9d0282"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.5.0/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "661a97236bcf802f0a9d0283",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T14:30:59.363Z",
        "updatedAt": "2024-04-13T14:30:59.363Z",
        "id": "661a97236bcf802f0a9d0283"
      },
      {
        "name": "sketch.js",
        "content": "// https://editor.p5js.org/jht1900/sketches/SQvdG-9bM\n// video clock\n\nlet nwidth = 640;\nlet nheight = 480;\nlet xgap = nwidth / 9;\nlet ygap = nheight / 9;\nlet x0;\nlet y0;\nlet capture;\nlet ang = 0;\nlet astep = 0.1;\nlet astart = 15; //180;\nlet aend = 360;\nlet aclockStep = 0.1;\nlet rscale = 2;\nlet routterScale = 1;\n\nlet phase = 0;\nlet zoff = 0;\nlet noiseMax = 5;\n\nfunction setup() {\n  createCanvas(nwidth, nheight);\n  capture = createCapture(VIDEO);\n  capture.size(width, height);\n  capture.hide();\n  x0 = int(nwidth / 2);\n  y0 = int(nheight / 2);\n}\n\nfunction draw() {\n  // colorMode(HSB);\n  strokeWeight(1);\n  // background(0);\n\n  // image(img,dx,dy,dWidth,dHeight,sx,sy,[sWidth],[sHeight],\n  let img = capture.get();\n  image(img, 0, 0, nwidth);\n\n  draw_rad(img);\n}\n\nfunction draw_rad(img) {\n  for (let ang = astart; ang < aend; ang += astep) {\n    let r1 = xgap / 2;\n    let rang = radians(ang);\n    // let x1 = r1 * cos(rang);\n    // let y1 = r1 * sin(rang);\n\n    let xoff = map(cos(rang + phase), -1, 1, 0, noiseMax);\n    let yoff = map(sin(rang + phase), -1, 1, 0, noiseMax);\n    let r2 = map(noise(xoff, yoff, zoff), 0, 1, r1, r1 * rscale);\n    let x1 = r2 * cos(rang);\n    let y1 = r2 * sin(rang);\n\n    let c1 = img.get(x0 + x1, y0 + y1);\n    stroke(c1);\n    fill(x1);\n    fill(0);\n    circle(x0 + x1, y0 + y1, 5);\n\n    let r3 = nwidth * routterScale;\n    let x2 = r3 * cos(rang);\n    let y2 = r3 * sin(rang);\n    line(x0 + x1, y0 + y1, x0 + x2, y0 + y2);\n  }\n  phase += 0.003;\n  zoff += 0.01;\n  astart += aclockStep;\n  aend += aclockStep;\n}\n\n// https://editor.p5js.org/jht1900/sketches/TWxfoAfA6\n// video radial perlin\n\n// https://editor.p5js.org/codingtrain/sketches/sy1p1vnQn\n// Polar Perlin Noise Loop\n\n// https://editor.p5js.org/jht1900/sketches/ydWiCsI2z\n// video radial\n\n// https://editor.p5js.org/jht1900/sketches/-Ypn6ODK_\n// video scan radial\n\n// https://editor.p5js.org/jht1493/sketches/mEXETIijv\n// video scan gap center\n\n// https://editor.p5js.org/jht1493/sketches/oHVI5tU4BP\n// video scan gap\n\n// https://editor.p5js.org/jht1493/sketches/Q9jdcICpW\n// video scan mouseY\n\n// https://editor.p5js.org/jht1493/sketches/gnx2IQn1N\n// video scan\n\n// https://github.com/processing/p5.js/wiki/Beyond-the-canvas#capture-live-video\n",
        "children": [],
        "fileType": "file",
        "_id": "661a97236bcf802f0a9d0284",
        "isSelectedFile": true,
        "createdAt": "2024-04-13T14:30:59.364Z",
        "updatedAt": "2024-04-13T14:30:59.364Z",
        "id": "661a97236bcf802f0a9d0284"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "661a97236bcf802f0a9d0285",
        "isSelectedFile": false,
        "createdAt": "2024-04-13T14:30:59.364Z",
        "updatedAt": "2024-04-13T14:30:59.364Z",
        "id": "661a97236bcf802f0a9d0285"
      }
    ],
    "createdAt": "2024-04-13T14:30:59.364Z",
    "id": "XALbXQeCG"
  },
  {
    "name": "Water bonobo 1",
    "_id": "m5CKtY0uE",
    "updatedAt": "2024-04-12T04:16:41.763Z",
    "files": [
      {
        "name": "root",
        "content": "",
        "children": [
          "6618472e0e2fbb1cd5ec388a",
          "6618b5a49bccde001a55f4df",
          "6618b555432613001afc9138",
          "6618472e0e2fbb1cd5ec3889",
          "6618472e0e2fbb1cd5ec388b"
        ],
        "fileType": "folder",
        "_id": "6618472e0e2fbb1cd5ec388c",
        "createdAt": "2024-04-12T04:16:41.763Z",
        "updatedAt": "2024-04-12T04:16:41.763Z",
        "isSelectedFile": false,
        "id": "6618472e0e2fbb1cd5ec388c"
      },
      {
        "name": "sketch.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background('gold');\n}",
        "children": [],
        "fileType": "file",
        "_id": "6618472e0e2fbb1cd5ec3889",
        "isSelectedFile": true,
        "createdAt": "2024-04-12T04:16:41.763Z",
        "updatedAt": "2024-04-12T04:16:41.763Z",
        "id": "6618472e0e2fbb1cd5ec3889"
      },
      {
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/p5.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.9.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    <meta charset=\"utf-8\" />\n\n  </head>\n  <body>\n    <main>\n    </main>\n    <script src=\"sketch.js\"></script>\n  </body>\n</html>\n",
        "children": [],
        "fileType": "file",
        "_id": "6618472e0e2fbb1cd5ec388a",
        "createdAt": "2024-04-12T04:16:41.763Z",
        "updatedAt": "2024-04-12T04:16:41.763Z",
        "isSelectedFile": false,
        "id": "6618472e0e2fbb1cd5ec388a"
      },
      {
        "name": "style.css",
        "content": "html, body {\n  margin: 0;\n  padding: 0;\n}\ncanvas {\n  display: block;\n}\n",
        "children": [],
        "fileType": "file",
        "_id": "6618472e0e2fbb1cd5ec388b",
        "createdAt": "2024-04-12T04:16:41.763Z",
        "updatedAt": "2024-04-12T04:16:41.763Z",
        "isSelectedFile": false,
        "id": "6618472e0e2fbb1cd5ec388b"
      },
      {
        "name": "sketch-1.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background('red');\n}",
        "children": [],
        "fileType": "file",
        "_id": "6618b555432613001afc9138",
        "updatedAt": "2024-04-12T04:16:41.763Z",
        "createdAt": "2024-04-12T04:16:41.763Z",
        "id": "6618b555432613001afc9138"
      },
      {
        "name": "sketch-1-1.js",
        "content": "function setup() {\n  createCanvas(400, 400);\n}\n\nfunction draw() {\n  background('red');\n}",
        "children": [],
        "fileType": "file",
        "_id": "6618b5a49bccde001a55f4df",
        "updatedAt": "2024-04-12T04:16:41.763Z",
        "createdAt": "2024-04-12T04:16:41.763Z",
        "id": "6618b5a49bccde001a55f4df"
      }
    ],
    "createdAt": "2024-04-11T20:25:57.671Z",
    "id": "m5CKtY0uE"
  }
]
